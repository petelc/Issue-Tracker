{"version":3,"sources":["webpack:///./src/About.jsx","webpack:///./src/IssueDetail.jsx","webpack:///./src/IssueEdit.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueReport.jsx","webpack:///./src/IssueTable.jsx","webpack:///./src/routes.js","webpack:///external \"prop-types\"","webpack:///external \"react-bootstrap\"","webpack:///external \"react-bootstrap/Alert\"","webpack:///external \"react-bootstrap/ButtonGroup\"","webpack:///external \"react-bootstrap/Card\"","webpack:///external \"react-bootstrap/FormControl\"","webpack:///external \"react-bootstrap/Pagination\"","webpack:///external \"react-bootstrap/Table\"","webpack:///external \"react-icons/bs\"","webpack:///external \"url-search-params\""],"names":["About","React","Component","fetchData","data","graphQLFetch","constructor","props","apiAbout","store","initialData","about","state","componentDidMount","setState","render","IssueDetail","issue","description","format","num","toString","unformat","str","val","parseInt","Number","isNaN","IssueEdit","match","search","showError","query","params","id","result","invalidFields","value","showingValidation","onChange","bind","handleSubmit","onValidityChange","showValidation","onBlur","onEffortChange","loadData","componentDidUpdate","prevProps","prevId","event","naturalValue","name","textValue","target","undefined","prevState","e","valid","preventDefault","Object","keys","length","created","changes","showSuccess","issueUpdate","dismissValidation","propsId","title","status","owner","effort","due","validationMessage","toDateString","IssueEditWithToasts","withToasts","withRouter","IssueFilter","location","URLSearchParams","get","effortMin","effortMax","changed","onChangeStatus","ApplyFilter","showOriginalFilter","onChangeEffortMin","onChangeEffortMax","prevSearch","effortString","history","urlBase","set","push","pathname","SECTION_SIZE","PageLink","page","activePage","children","cloneElement","disabled","IssueList","vars","hasSelection","selectedId","idInt","issueList","issues","pages","selectedIssue","closeIssue","deleteIssue","index","newList","issueDelete","splice","undoMessage","restoreIssue","startPage","Math","floor","endPage","prevSection","nextSection","items","i","min","IssueListWithToasts","statuses","IssueReport","stats","issueCounts","headerColumns","map","statRows","counts","reduce","total","IssueReportWithToast","IssueRow","selectLocation","closeTooltip","deleteTooltip","IssueTable","issueRows","routes","path","component","NotFound"],"mappings":"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","file":"server.a7929981e9da174c3225.hot-update.js","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport store from './store.js';\r\nimport graphQLFetch from './graphQLFetch.js';\r\n\r\nexport default class About extends React.Component {\r\n  static async fetchData() {\r\n    const data = await graphQLFetch('query {about}');\r\n    return data;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const apiAbout = store.initialData ? store.initialData.about : null;\r\n    delete store.initialData;\r\n    this.state = { apiAbout };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { apiAbout } = this.state;\r\n    if (apiAbout == null) {\r\n      const data = await About.fetchData();\r\n      this.setState({ apiAbout: data.about });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { apiAbout } = this.state;\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h3>Issue Tracker version 2.5.1</h3>\r\n        <h4>\r\n          { apiAbout }\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function IssueDetail({ issue }) {\r\n  if (issue) {\r\n    return (\r\n      <div className=\"text-area\">\r\n        <h3>Description</h3>\r\n        <pre>{issue.description}</pre>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// Bootstrap\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport props from 'prop-types';\r\n// Local Imports\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport withToasts from './withToasts.jsx';\r\n\r\nfunction format(num) {\r\n  return num != null ? num.toString() : '';\r\n}\r\n\r\nfunction unformat(str) {\r\n  const val = parseInt(str, 10);\r\n  return Number.isNaN(val) ? null : val;\r\n}\r\n\r\nclass IssueEdit extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const query = `query issue($id: Int!) {\r\n      issue(id: $id) {\r\n        id title status owner\r\n        effort created due description\r\n      }\r\n    }`;\r\n    let { params: { id } } = match;\r\n    id = parseInt(id, 10);\r\n    const result = await graphQLFetch(query, { id }, showError);\r\n    return result;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const issue = store.initialData ? store.initialData.issue : null;\r\n    delete store.initialData;\r\n    this.state = {\r\n      issue,\r\n      invalidFields: {},\r\n      value: format(props.value),\r\n      showingValidation: false,\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onValidityChange = this.onValidityChange.bind(this);\r\n    this.showValidation = this.showValidation.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n    this.onEffortChange = this.onEffortChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { issue } = this.state;\r\n    if (issue == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: {\r\n        params: { id: prevId },\r\n      },\r\n    } = prevProps;\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props;\r\n    if (id !== prevId) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  onChange(event, naturalValue) {\r\n    const { name, value: textValue } = event.target;\r\n    let value;\r\n    if (name === 'effort') {\r\n      value = unformat(textValue);\r\n    } else {\r\n      value = naturalValue === undefined ? textValue : naturalValue;\r\n    }\r\n    this.setState((prevState) => ({\r\n      issue: { ...prevState.issue, [name]: value },\r\n    }));\r\n  }\r\n\r\n  onBlur(e) {\r\n    const { onChange } = this.props;\r\n    const { value } = this.state;\r\n    onChange(e, unformat(value));\r\n  }\r\n\r\n  onEffortChange(e) {\r\n    if (e.target.value.match(/^\\d*$/)) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n  }\r\n\r\n  onValidityChange(event, valid) {\r\n    const { name } = event.target;\r\n    this.setState((prevState) => {\r\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\r\n      if (valid) delete invalidFields[name];\r\n      return { invalidFields };\r\n    });\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.showValidation();\r\n    const { issue, invalidFields } = this.state;\r\n    if (Object.keys(invalidFields).length !== 0) return;\r\n\r\n    const query = `mutation issueUpdate(\r\n        $id: Int!\r\n        $changes: IssueUpdateInputs!\r\n      ) {\r\n        issueUpdate(\r\n          id: $id\r\n          changes: $changes\r\n        ) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n\r\n    const { id, created, ...changes } = issue;\r\n    const { showSuccess, showError } = this.props;\r\n    const data = await graphQLFetch(query, { changes, id }, showError);\r\n    if (data) {\r\n      this.setState({ issue: data.issueUpdate });\r\n      showSuccess('Updated Issue Successfully');\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { match, showError } = this.props;\r\n    const data = await IssueEdit.fetchData(match, null, showError);\r\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\r\n  }\r\n\r\n  showValidation() {\r\n    this.setState({ showingValidation: true });\r\n  }\r\n\r\n  dismissValidation() {\r\n    this.setState({ showingValidation: false });\r\n  }\r\n\r\n  render() {\r\n    const { issue } = this.state;\r\n    if (issue == null) return null;\r\n    const {\r\n      issue: { id },\r\n    } = this.state;\r\n    const {\r\n      match: {\r\n        params: { id: propsId },\r\n      },\r\n    } = this.props;\r\n      // propsId = parseInt(propsId, 10);\r\n    if (id == null) {\r\n      if (propsId != null) {\r\n        return <h3>{`Issue with ID ${propsId} not found`}</h3>;\r\n      }\r\n      return null;\r\n    }\r\n    const {\r\n      issue: { title, status },\r\n    } = this.state;\r\n    const {\r\n      issue: { owner, effort, description },\r\n    } = this.state;\r\n    const {\r\n      issue: { created, due },\r\n    } = this.state;\r\n    const { invalidFields, showingValidation } = this.state;\r\n    let validationMessage;\r\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\r\n      validationMessage = (\r\n        <Alert variant=\"danger\" dismissible>\r\n          <Alert.Heading>Danger Will Robinson!</Alert.Heading>\r\n          <p>\r\n            Please correct invalid fields before submitting.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={this.dismissValidation} variant=\"outline-danger\">\r\n              BAM!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n      );\r\n    }\r\n    return (\r\n      <Card>\r\n        <Card.Header>{`Editing issue: ${id}`}</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>Created</Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    name=\"created\"\r\n                    value={created.toDateString()}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Status\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    onChange={this.onChange}\r\n                    custom\r\n                  >\r\n                    <option value=\"New\">New</option>\r\n                    <option value=\"Assigned\">Assigned</option>\r\n                    <option value=\"Fixed\">Fixed</option>\r\n                    <option value=\"Closed\">Closed</option>\r\n                  </Form.Control>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Owner\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    name=\"owner\"\r\n                    value={owner}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Effort\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <Form.Control\r\n                    name=\"effort\"\r\n                    value={effort}\r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group validationstate={\r\n              invalidFields.due ? 'error' : null\r\n            }\r\n              >\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Due\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    name=\"due\"\r\n                    value={due.toDateString()}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                  <FormControl.Feedback type=\"invalid\">\r\n                    Please provide a Due Date\r\n                  </FormControl.Feedback>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Title\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm=\"auto\">\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    cols={125}\r\n                    rows={1}\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Description\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm=\"auto\">\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={12}\r\n                    cols={125}\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm=\"auto\" />\r\n                <Col className=\"mr-auto\" sm=\"auto\">\r\n                  <ButtonToolbar>\r\n                    <ButtonGroup className=\"mr-2\">\r\n                      <LinkContainer to=\"/issues\">\r\n                        <Button variant=\"secondary\">\r\n                          Back\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      {'   '}\r\n                      <Button variant=\"success\" type=\"submit\">\r\n                        Submit\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </ButtonToolbar>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3} />\r\n                <Col sm=\"auto\">\r\n                  {validationMessage}\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Link to={`/edit/${id - 1}`}>Prev</Link>\r\n          {' | '}\r\n          <Link to={`/edit/${id + 1}`}>Next</Link>\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueEditWithToasts = withToasts(IssueEdit);\r\nIssueEditWithToasts.fetchData = IssueEdit.fetchData;\r\nexport default IssueEditWithToasts;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport { withRouter } from 'react-router-dom';\r\n// Bootstrap\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n// The form import should take care of all of the\r\n// need form imports\r\nimport Form from 'react-bootstrap/Form';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default withRouter(\r\n  class IssueFilter extends React.Component {\r\n    constructor({ location: { search } }) {\r\n      super();\r\n      const params = new URLSearchParams(search);\r\n      this.state = {\r\n        status: params.get('status') || '',\r\n        effortMin: params.get('effortMin') || '',\r\n        effortMax: params.get('effortMax') || '',\r\n        changed: false,\r\n      };\r\n      this.onChangeStatus = this.onChangeStatus.bind(this);\r\n      this.ApplyFilter = this.ApplyFilter.bind(this);\r\n      this.showOriginalFilter = this.showOriginalFilter.bind(this);\r\n      this.onChangeEffortMin = this.onChangeEffortMin.bind(this);\r\n      this.onChangeEffortMax = this.onChangeEffortMax.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { location: { search: prevSearch } } = prevProps;\r\n      const { location: { search } } = this.props;\r\n      if (prevSearch !== search) {\r\n        this.showOriginalFilter();\r\n      }\r\n    }\r\n\r\n    onChangeStatus(e) {\r\n      this.setState({ status: e.target.value, changed: true });\r\n    }\r\n\r\n    onChangeEffortMin(e) {\r\n      const effortString = e.target.value;\r\n      if (effortString.match(/^\\d*$/)) {\r\n        this.setState({ effortMin: e.target.value, changed: true });\r\n      }\r\n    }\r\n\r\n    onChangeEffortMax(e) {\r\n      const effortString = e.target.value;\r\n      if (effortString.match(/^\\d*$/)) {\r\n        this.setState({ effortMax: e.target.value, changed: true });\r\n      }\r\n    }\r\n\r\n    showOriginalFilter() {\r\n      const { location: { search } } = this.props;\r\n      const params = new URLSearchParams(search);\r\n      this.setState({\r\n        status: params.get('status') || '',\r\n        effortMin: params.get('effortMin') || '',\r\n        effortMax: params.get('effortMax') || '',\r\n        changed: false,\r\n      });\r\n    }\r\n\r\n    ApplyFilter() {\r\n      const { status, effortMin, effortMax } = this.state;\r\n      const { history, urlBase } = this.props;\r\n\r\n      const params = new URLSearchParams();\r\n      if (status) params.set('status', status);\r\n      if (effortMin) params.set('effortMin', effortMin);\r\n      if (effortMax) params.set('effortMax', effortMax);\r\n\r\n      const search = params.toString() ? `?${params.toString()}` : '';\r\n      history.push({ pathname: urlBase, search });\r\n    }\r\n\r\n    render() {\r\n      const { status, changed } = this.state;\r\n      const { effortMin, effortMax } = this.state;\r\n      return (\r\n        <Row>\r\n          <Col xs={6} sm={4} md={3} lg={2}>\r\n            <Form.Group>\r\n              <Form.Label>Status:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                size=\"md\"\r\n                custom\r\n                value={status}\r\n                onChange={this.onChangeStatus}\r\n              >\r\n                <option value=\"\">(All)</option>\r\n                <option value=\"New\">New</option>\r\n                <option value=\"Assigned\">Assigned</option>\r\n                <option value=\"Fixed\">Fixed</option>\r\n                <option value=\"Closed\">Closed</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col xs={6} sm={4} md={3} lg={2}>\r\n            <Form.Group>\r\n              <Form.Label>Effort between:</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control value={effortMin} onChange={this.onChangeEffortMin} />\r\n                <InputGroup.Append>\r\n                  <InputGroup.Text>-</InputGroup.Text>\r\n                </InputGroup.Append>\r\n                <Form.Control value={effortMax} onChange={this.onChangeEffortMax} />\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col xs={6} sm={4} md={3} lg={2}>\r\n            <Form.Group>\r\n              <Form.Label>&nbsp;</Form.Label>\r\n              <ButtonToolbar className=\"mb-3\" aria-label=\"Toolbar with Button groups\">\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"Filter group\">\r\n                  <Button variant=\"success\" type=\"button\" onClick={this.ApplyFilter}>\r\n                    Apply\r\n                  </Button>\r\n                  {'   '}\r\n                  <Button variant=\"danger\" type=\"button\" onClick={this.showOriginalFilter} disabled={!changed}>\r\n                    Reset\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </ButtonToolbar>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n  },\r\n);\r\n","/* eslint-disable react/no-unused-state */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable react/prop-types */\r\n/* eslint \"react/jsx-no-undef\": \"off\" */\r\nimport React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport IssueDetail from './IssueDetail.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport withToasts from './withToasts.jsx';\r\n\r\nconst SECTION_SIZE = 5;\r\n\r\nfunction PageLink({\r\n  params, page, activePage, children,\r\n}) {\r\n  params.set('page', page);\r\n  if (page === 0) return React.cloneElement(children, { disabled: true });\r\n  return (\r\n    <LinkContainer\r\n      isActive={() => page === activePage}\r\n      to={{ search: `?${params.toString()}` }}\r\n    >\r\n      {children}\r\n    </LinkContainer>\r\n  );\r\n}\r\n\r\nclass IssueList extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { hasSelection: false, selectedId: 0 };\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const { params: { id } } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n\r\n    let page = parseInt(params.get('page'), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n    vars.page = page;\r\n\r\n    const query = `query issueList(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n      $hasSelection: Boolean!\r\n      $selectedId: Int!\r\n      $page: Int!\r\n    ) {\r\n      issueList(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n        page: $page\r\n      ) {\r\n        issues {\r\n          id title status owner\r\n          created effort due\r\n        }\r\n        pages\r\n      }\r\n      issue(id: $selectedId) @include (if : $hasSelection) {\r\n        id description\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    // const issues = store.initialData ? store.initialData.issueList.issues : null;\r\n    // const selectedIssue = store.initialData ? store.initialData.issue : null;\r\n    const initialData = store.initialData || { issueList: {} };\r\n    const {\r\n      issueList: { issues, pages }, issue: selectedIssue,\r\n    } = initialData;\r\n    delete store.initialData;\r\n    this.state = {\r\n      issues,\r\n      selectedIssue,\r\n      pages,\r\n    };\r\n    this.closeIssue = this.closeIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { issues } = this.state;\r\n    if (issues == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { search: prevSearch },\r\n      match: { params: { id: prevId } },\r\n    } = prevProps;\r\n    const { location: { search }, match: { params: { id } } } = this.props;\r\n    if (prevSearch !== search || prevId !== id) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { location: { search }, match, showError } = this.props;\r\n    const data = await IssueList.fetchData(match, search, showError);\r\n    if (data) {\r\n      this.setState({\r\n        issues: data.issueList.issues,\r\n        selectedIssue: data.issue,\r\n        pages: data.issueList.pages,\r\n      });\r\n    }\r\n  }\r\n\r\n  async closeIssue(index) {\r\n    const query = `mutation issueClose($id: Int!) {\r\n        issueUpdate(id: $id, changes: { status: Closed }) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n    const { issues } = this.state;\r\n    const { showError } = this.props;\r\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\r\n    if (data) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        newList[index] = data.issueUpdate;\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async deleteIssue(index) {\r\n    const query = `mutation issueDelete($id: Int!) {\r\n      issueDelete(id: $id)\r\n    }`;\r\n    const { issues } = this.state;\r\n    const { location: { pathname, search }, history } = this.props;\r\n    const { showSuccess, showError } = this.props;\r\n    const { id } = issues[index];\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data && data.issueDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        if (pathname === `/issues/${id}`) {\r\n          history.push({ pathname: '/issues', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { issues: newList };\r\n      });\r\n      const undoMessage = (\r\n        <span>\r\n          {`Deleted issue ${id} successfully.`}\r\n          <Button variant=\"danger\" onClick={() => this.restoreIssue(id)}>\r\n            UNDO\r\n          </Button>\r\n        </span>\r\n      );\r\n      showSuccess(undoMessage);\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async restoreIssue(id) {\r\n    const query = `mutation issueRestore($id: Int!) {\r\n      issueRestore(id: $id)\r\n    }`;\r\n    const { showSuccess, showError } = this.props;\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data) {\r\n      showSuccess(`Issue ${id} restored successfully.`);\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { issues } = this.state;\r\n    if (issues == null) return null;\r\n    const { selectedIssue, pages } = this.state;\r\n    const { location: { search } } = this.props;\r\n\r\n    const params = new URLSearchParams(search);\r\n    let page = parseInt(params.get('page'), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n\r\n    const startPage = Math.floor((page - 1) / SECTION_SIZE) * SECTION_SIZE + 1;\r\n    const endPage = startPage + SECTION_SIZE - 1;\r\n    const prevSection = startPage === 1 ? 0 : startPage - SECTION_SIZE;\r\n    const nextSection = endPage >= pages ? 0 : startPage + SECTION_SIZE;\r\n\r\n    const items = [];\r\n    for (let i = startPage; i <= Math.min(endPage, pages); i += 1) {\r\n      params.set('page', 1);\r\n      items.push((\r\n        <PageLink key={i} params={params} activePage={page} page={i}>\r\n          <Pagination.Item>{i}</Pagination.Item>\r\n        </PageLink>\r\n      ));\r\n    }\r\n    return (\r\n      <>\r\n        <Card className=\"text-left bg-dark text-white\">\r\n          <Card.Header><h5>Filter</h5></Card.Header>\r\n          <Card.Body>\r\n            <IssueFilter urlBase=\"/issues\" />\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"spacer\" />\r\n        <IssueTable\r\n          issues={issues}\r\n          closeIssue={this.closeIssue}\r\n          deleteIssue={this.deleteIssue}\r\n        />\r\n        <div className=\"spacer\" />\r\n        <IssueDetail issue={selectedIssue} />\r\n        <Pagination>\r\n          <PageLink params={params} page={prevSection}>\r\n            <Pagination.Item>{'<'}</Pagination.Item>\r\n          </PageLink>\r\n          {items}\r\n          <PageLink params={params} page={nextSection}>\r\n            <Pagination.Item>{'>'}</Pagination.Item>\r\n          </PageLink>\r\n        </Pagination>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueListWithToasts = withToasts(IssueList);\r\nIssueListWithToasts.fetchData = IssueList.fetchData;\r\nexport default withToasts(IssueList);\r\n","/* eslint-disable linebreak-style */\r\n\r\nimport React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport URLSearchParams from 'url-search-params';\r\n\r\nimport withToasts from './withToasts.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport IssueFilter from './IssueFilter.jsx';\r\n\r\nconst statuses = ['New', 'Assigned', 'Fixed', 'Closed'];\r\n\r\nclass IssueReport extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { };\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const { params: { id } } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n\r\n    const query = `query issueList(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n    ) {\r\n      issueCounts(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n      ) {\r\n        owner New Assigned Fixed Closed\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const stats = store.initialData ? store.initialData.issueCounts : null;\r\n    delete store.initialData;\r\n    this.state = { stats };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { stats } = this.state;\r\n    if (stats == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location: { search: prevSearch } } = prevProps;\r\n    const { location: { search } } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { location: { search }, match, showError } = this.props;\r\n    const data = await IssueReport.fetchData(match, search, showError);\r\n    if (data) {\r\n      this.setState({ stats: data.issueCounts });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const headerColumns = (\r\n      statuses.map((status) => (\r\n        <th key={status}>{status}</th>\r\n      ))\r\n    );\r\n    const { stats } = this.state;\r\n    if (stats == null) return null;\r\n    const statRows = stats.map((counts) => (\r\n      <tr key={counts.owner}>\r\n        <td>{counts.owner}</td>\r\n        {statuses.map((status) => (\r\n          <td key={status}>{counts[status]}</td>\r\n        ))}\r\n        <td>{statuses.reduce((total, status) => total + counts[status], 0)}</td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <>\r\n        <Card className=\"text-left bg-dark text-white\">\r\n          <Card.Header><h5>Filter</h5></Card.Header>\r\n          <Card.Body>\r\n            <IssueFilter urlBase=\"/report\" />\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"spacer\" />\r\n        <Table striped bordered hover responsive variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Owner</th>\r\n              {headerColumns}\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{statRows}</tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueReportWithToast = withToasts(IssueReport);\r\nIssueReportWithToast.fetchData = IssueReport.fetchData;\r\nexport default IssueReportWithToast;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// Bootstrap\r\nimport { Tooltip, OverlayTrigger, Button } from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\nimport {\r\n  BsFillXCircleFill, BsFillTrashFill, BsPencil, BsCheckAll,\r\n} from 'react-icons/bs';\r\n\r\nconst IssueRow = withRouter(({\r\n  issue,\r\n  location: { search },\r\n  closeIssue,\r\n  deleteIssue,\r\n  index,\r\n}) => {\r\n  const selectLocation = { pathname: `/issues/${issue.id}`, search };\r\n  const closeTooltip = (\r\n    <Tooltip id=\"close-tooltip\" placement=\"top\">Close Issue</Tooltip>\r\n  );\r\n  const deleteTooltip = (\r\n    <Tooltip id=\"delete-tooltip\" placement=\"top\">Delete Issue</Tooltip>\r\n  );\r\n  return (\r\n    <tr>\r\n      <td component=\"th\">{issue.id}</td>\r\n      <td align=\"center\">{issue.status}</td>\r\n      <td align=\"center\">{issue.owner}</td>\r\n      <td align=\"center\">{issue.created.toDateString()}</td>\r\n      <td align=\"center\">{issue.effort}</td>\r\n      <td align=\"center\">{issue.due.toDateString() ? issue.due.toDateString() : ' '}</td>\r\n      <td align=\"center\">{issue.title}</td>\r\n      <td align=\"center\">\r\n        <Link to={selectLocation}>\r\n          <Button size=\"sm\">\r\n            <BsCheckAll />\r\n          </Button>\r\n        </Link>\r\n      </td>\r\n      <td align=\"center\">\r\n        <Link to={`/edit/${issue.id}`}>\r\n          <Button size=\"sm\">\r\n            <BsPencil />\r\n          </Button>\r\n        </Link>\r\n      </td>\r\n      <td align=\"center\">\r\n        <OverlayTrigger delayShow={1000} overlay={closeTooltip}>\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={() => { closeIssue(index); }}\r\n          >\r\n            <BsFillXCircleFill />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n      <td align=\"center\">\r\n        <OverlayTrigger delayShow={1000} overlay={deleteTooltip}>\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={() => { deleteIssue(index); }}\r\n          >\r\n            <BsFillTrashFill />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n    </tr>\r\n  );\r\n});\r\n\r\nexport default function IssueTable({ issues, closeIssue, deleteIssue }) {\r\n  const issueRows = issues.map((issue, index) => (\r\n    <IssueRow\r\n      key={issue.id}\r\n      issue={issue}\r\n      closeIssue={closeIssue}\r\n      deleteIssue={deleteIssue}\r\n      index={index}\r\n    />\r\n  ));\r\n  return (\r\n    <Table striped bordered hover responsive variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n          <th responsive=\"sm\">ID</th>\r\n          <th align=\"center\" responsive=\"md\">Status</th>\r\n          <th align=\"center\" responsive=\"md\">Owner</th>\r\n          <th align=\"center\">Created</th>\r\n          <th align=\"center\" responsive=\"sm\">Effort</th>\r\n          <th align=\"center\">Due Date</th>\r\n          <th align=\"center\" responsive=\"md\">Title</th>\r\n          <th align=\"center\">Details</th>\r\n          <th align=\"center\">Update</th>\r\n          <th align=\"center\">Close</th>\r\n          <th align=\"center\">Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{issueRows}</tbody>\r\n    </Table>\r\n  );\r\n}\r\n","import IssueList from './IssueList.jsx';\r\nimport IssueReport from './IssueReport.jsx';\r\nimport IssueEdit from './IssueEdit.jsx';\r\nimport About from './About.jsx';\r\nimport NotFound from './NotFound.jsx';\r\n\r\nconst routes = [\r\n  { path: '/issues/:id?', component: IssueList },\r\n  { path: '/edit/:id', component: IssueEdit },\r\n  { path: '/report', component: IssueReport },\r\n  { path: '/about', component: About },\r\n  { path: '*', component: NotFound }\r\n];\r\n\r\nexport default routes;\r\n","module.exports = require(\"prop-types\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-bootstrap/Alert\");","module.exports = require(\"react-bootstrap/ButtonGroup\");","module.exports = require(\"react-bootstrap/Card\");","module.exports = require(\"react-bootstrap/FormControl\");","module.exports = require(\"react-bootstrap/Pagination\");","module.exports = require(\"react-bootstrap/Table\");","module.exports = require(\"react-icons/bs\");","module.exports = require(\"url-search-params\");"],"sourceRoot":""}