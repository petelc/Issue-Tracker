{"version":3,"sources":["webpack:///./src/IssueDetail.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueTable.jsx","webpack:///external \"react-bootstrap/Table\"","webpack:///external \"url-search-params\""],"names":["IssueDetail","issue","description","withRouter","IssueFilter","React","Component","constructor","location","search","params","URLSearchParams","state","status","get","effortMin","effortMax","changed","onChangeStatus","bind","ApplyFilter","showOriginalFilter","onChangeEffortMin","onChangeEffortMax","componentDidUpdate","prevProps","prevSearch","props","e","setState","target","value","effortString","match","history","set","toString","push","pathname","render","IssueList","fetchData","showError","vars","hasSelection","selectedId","parseInt","Number","isNaN","id","idInt","query","data","graphQLFetch","issues","store","initialData","issueList","selectedIssue","toastVisible","toastMessage","toastType","closeIssue","deleteIssue","showSuccess","dismissToast","componentDidMount","loadData","index","prevState","newList","issueUpdate","issueDelete","splice","message","path","IssueRow","selectLocation","closeTooltip","deleteTooltip","owner","created","toDateString","effort","due","title","IssueTable","issueRows","map"],"mappings":"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","file":"server.6fcc513d1af053104087.hot-update.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function IssueDetail({ issue }) {\r\n  if (issue) {\r\n    return (\r\n      <div className=\"text-area\">\r\n        <h3>Description</h3>\r\n        <pre>{issue.description}</pre>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport { withRouter } from 'react-router-dom';\r\n// Bootstrap\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n// The form import should take care of all of the\r\n// need form imports\r\nimport Form from 'react-bootstrap/Form';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default withRouter(\r\n  class IssueFilter extends React.Component {\r\n    constructor({ location: { search } }) {\r\n      super();\r\n      const params = new URLSearchParams(search);\r\n      this.state = {\r\n        status: params.get('status') || '',\r\n        effortMin: params.get('effortMin') || '',\r\n        effortMax: params.get('effortMax') || '',\r\n        changed: false,\r\n      };\r\n      this.onChangeStatus = this.onChangeStatus.bind(this);\r\n      this.ApplyFilter = this.ApplyFilter.bind(this);\r\n      this.showOriginalFilter = this.showOriginalFilter.bind(this);\r\n      this.onChangeEffortMin = this.onChangeEffortMin.bind(this);\r\n      this.onChangeEffortMax = this.onChangeEffortMax.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { location: { search: prevSearch } } = prevProps;\r\n      const { location: { search } } = this.props;\r\n      if (prevSearch !== search) {\r\n        this.showOriginalFilter();\r\n      }\r\n    }\r\n\r\n    onChangeStatus(e) {\r\n      this.setState({ status: e.target.value, changed: true });\r\n    }\r\n\r\n    onChangeEffortMin(e) {\r\n      const effortString = e.target.value;\r\n      if (effortString.match(/^\\d*$/)) {\r\n        this.setState({ effortMin: e.target.value, changed: true });\r\n      }\r\n    }\r\n\r\n    onChangeEffortMax(e) {\r\n      const effortString = e.target.value;\r\n      if (effortString.match(/^\\d*$/)) {\r\n        this.setState({ effortMax: e.target.value, changed: true });\r\n      }\r\n    }\r\n\r\n    showOriginalFilter() {\r\n      const { location: { search } } = this.props;\r\n      const params = new URLSearchParams(search);\r\n      this.setState({\r\n        status: params.get('status') || '',\r\n        effortMin: params.get('effortMin') || '',\r\n        effortMax: params.get('effortMax') || '',\r\n        changed: false,\r\n      });\r\n    }\r\n\r\n    ApplyFilter() {\r\n      const { status, effortMin, effortMax } = this.state;\r\n      const { history } = this.props;\r\n\r\n      const params = new URLSearchParams();\r\n      if (status) params.set('status', status);\r\n      if (effortMin) params.set('effortMin', effortMin);\r\n      if (effortMax) params.set('effortMax', effortMax);\r\n\r\n      const search = params.toString() ? `?${params.toString()}` : '';\r\n      history.push({ pathname: '/issues', search });\r\n    }\r\n\r\n    render() {\r\n      const { status, changed } = this.state;\r\n      const { effortMin, effortMax } = this.state;\r\n      return (\r\n      <Row>\r\n        <Col xs={6} sm={4} md={3} lg={2}>\r\n          <Form.Group>\r\n          <Form.Label>Status:</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            size=\"md\"\r\n            custom\r\n            value={status}\r\n            onChange={this.onChangeStatus}\r\n          >\r\n            <option value=\"\">(All)</option>\r\n            <option value=\"New\">New</option>\r\n            <option value=\"Assigned\">Assigned</option>\r\n            <option value=\"Fixed\">Fixed</option>\r\n            <option value=\"Closed\">Closed</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        </Col>\r\n        <Col xs={6} sm={4} md={3} lg={2}>\r\n          <Form.Group>\r\n          <Form.Label>Effort between:</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control value={effortMin} onChange={this.onChangeEffortMin}/>\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>-</InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control value={effortMax} onChange={this.onChangeEffortMax}/>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        </Col>\r\n        <Col xs={6} sm={4} md={3} lg={2}>\r\n          <Form.Group>\r\n            <Form.Label>&nbsp;</Form.Label>\r\n            <ButtonToolbar className=\"mb-3\" aria-label=\"Toolbar with Button groups\">\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"Filter group\">\r\n                <Button variant=\"success\" type=\"button\" onClick={this.ApplyFilter}>\r\n                  Apply\r\n                </Button>\r\n                {'   '}\r\n                <Button variant=\"danger\" type=\"button\" onClick={this.showOriginalFilter} disabled={!changed}>\r\n                  Reset\r\n                </Button>\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      );\r\n    }\r\n  },\r\n);\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable react/prop-types */\r\n/* eslint \"react/jsx-no-undef\": \"off\" */\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport URLSearchParams from 'url-search-params';\r\nimport Card from 'react-bootstrap/Card';\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport IssueDetail from './IssueDetail.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport Toasts from './Toasts.jsx';\r\nimport store from './store.js';\r\n\r\nexport default class IssueList extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { hasSelection: false, selectedId: 0 };\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const { params: { id } } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n\r\n    const query = `query issueList(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n      $hasSelection: Boolean!\r\n      $selectedId: Int!\r\n    ) {\r\n      issueList(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n      ) {\r\n        id title status owner\r\n        created effort due\r\n      }\r\n      issue(id: $selectedId) @include (if : $hasSelection) {\r\n        id description\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const issues = store.initialData ? store.initialData.issueList : null;\r\n    const selectedIssue = \r\n    delete store.initialData;\r\n    this.state = {\r\n      issues,\r\n      toastVisible: false,\r\n      toastMessage: ' ',\r\n      toastType: 'info',\r\n    };\r\n    this.closeIssue = this.closeIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n    this.showSuccess = this.showSuccess.bind(this);\r\n    this.showError = this.showError.bind(this);\r\n    this.dismissToast = this.dismissToast.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { issues } = this.state;\r\n    if (issues == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { search: prevSearch },\r\n    } = prevProps;\r\n    const {\r\n      location: { search },\r\n    } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { location: { search } } = this.props;\r\n    const data = await IssueList.fetchData(null, search, this.showError);\r\n    if (data) {\r\n      this.setState({ issues: data.issueList });\r\n    }\r\n  }\r\n\r\n  /*\r\n  // Handle the querystring param here for Issue Filter\r\n  async loadData() {\r\n    const {\r\n      location: { search },\r\n    } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    const vars = {};\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    // Adding in effortMin and effortMax parameters\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n    const query = `query issueList(\r\n        $status: StatusType\r\n        $effortMin: Int\r\n        $effortMax: Int\r\n        ) {\r\n        issueList (\r\n          status: $status\r\n          effortMin: $effortMin\r\n          effortMax: $effortMax\r\n          ) {\r\n          id title status owner\r\n          created effort due\r\n        }\r\n      }`;\r\n\r\n    const data = await graphQLFetch(query, vars, this.showError);\r\n    if (data) {\r\n      this.setState({ issues: data.issueList });\r\n    }\r\n  }\r\n  */\r\n\r\n  async closeIssue(index) {\r\n    const query = `mutation issueClose($id: Int!) {\r\n        issueUpdate(id: $id, changes: { status: Closed }) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n    const { issues } = this.state;\r\n    const data = await graphQLFetch(query, { id: issues[index].id }, this.showError);\r\n    if (data) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        newList[index] = data.issueUpdate;\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async deleteIssue(index) {\r\n    const query = `mutation issueDelete($id: Int!) {\r\n      issueDelete(id: $id)\r\n    }`;\r\n    const { issues } = this.state;\r\n    const {\r\n      location: { pathname, search },\r\n      history,\r\n    } = this.props;\r\n    const { id } = issues[index];\r\n    const data = await graphQLFetch(query, { id }, this.showError);\r\n    if (data && data.issueDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        if (pathname === `/issues/${id}`) {\r\n          history.push({ pathname: '/issues', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: 'success',\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: 'danger',\r\n    });\r\n  }\r\n\r\n  dismissToast() {\r\n    this.setState({ toastVisible: false });\r\n  }\r\n\r\n  render() {\r\n    const { issues } = this.state;\r\n    if (issues == null) return null;\r\n    // eslint-disable-next-line react/prop-types\r\n    const { match } = this.props;\r\n    const { toastVisible, toastMessage, toastType } = this.state;\r\n    return (\r\n      <>\r\n        <Card className=\"text-left bg-dark text-white\">\r\n          <Card.Header><h5>Filter</h5></Card.Header>\r\n          <Card.Body>\r\n            <IssueFilter />\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"spacer\" />\r\n        <IssueTable\r\n          issues={issues}\r\n          closeIssue={this.closeIssue}\r\n          deleteIssue={this.deleteIssue}\r\n        />\r\n        <div className=\"spacer\" />\r\n        <Route path={`${match.path}/:id`} component={IssueDetail} />\r\n        <Toasts\r\n          showing={toastVisible}\r\n          onDismiss={this.dismissToast}\r\n          type={toastType}\r\n        >\r\n          {toastMessage}\r\n        </Toasts>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// Bootstrap\r\nimport { Tooltip, OverlayTrigger, Button } from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\nimport {\r\n  BsFillXCircleFill, BsFillTrashFill, BsPencil, BsCheckAll,\r\n} from 'react-icons/bs';\r\n\r\nconst IssueRow = withRouter(({\r\n  issue,\r\n  location: { search },\r\n  closeIssue,\r\n  deleteIssue,\r\n  index,\r\n}) => {\r\n  const selectLocation = { pathname: `/issues/${issue.id}`, search };\r\n  const closeTooltip = (\r\n    <Tooltip id=\"close-tooltip\" placement=\"top\">Close Issue</Tooltip>\r\n  );\r\n  const deleteTooltip = (\r\n    <Tooltip id=\"delete-tooltip\" placement=\"top\">Delete Issue</Tooltip>\r\n  );\r\n  return (\r\n    <tr>\r\n      <td component=\"th\">{issue.id}</td>\r\n      <td align=\"center\">{issue.status}</td>\r\n      <td align=\"center\">{issue.owner}</td>\r\n      <td align=\"center\">{issue.created.toDateString()}</td>\r\n      <td align=\"center\">{issue.effort}</td>\r\n      <td align=\"center\">{issue.due.toDateString() ? issue.due.toDateString() : ' '}</td>\r\n      <td align=\"center\">{issue.title}</td>\r\n      <td align=\"center\">\r\n        <Link to={selectLocation}>\r\n          <Button size=\"sm\">\r\n            <BsCheckAll />\r\n          </Button>\r\n        </Link>\r\n      </td>\r\n      <td align=\"center\">\r\n        <Link to={`/edit/${issue.id}`}>\r\n          <Button size=\"sm\">\r\n            <BsPencil />\r\n          </Button>\r\n        </Link>\r\n      </td>\r\n      <td align=\"center\">\r\n        <OverlayTrigger delayShow={1000} overlay={closeTooltip}>\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={() => { closeIssue(index); }}\r\n          >\r\n            <BsFillXCircleFill />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n      <td align=\"center\">\r\n        <OverlayTrigger delayShow={1000} overlay={deleteTooltip}>\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={() => { deleteIssue(index); }}\r\n          >\r\n            <BsFillTrashFill />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n    </tr>\r\n  );\r\n});\r\n\r\nexport default function IssueTable({ issues, closeIssue, deleteIssue }) {\r\n  const issueRows = issues.map((issue, index) => (\r\n    <IssueRow\r\n      key={issue.id}\r\n      issue={issue}\r\n      closeIssue={closeIssue}\r\n      deleteIssue={deleteIssue}\r\n      index={index}\r\n    />\r\n  ));\r\n  return (\r\n    <Table striped bordered hover responsive variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n          <th responsive=\"sm\">ID</th>\r\n          <th align=\"center\" responsive=\"md\">Status</th>\r\n          <th align=\"center\" responsive=\"md\">Owner</th>\r\n          <th align=\"center\">Created</th>\r\n          <th align=\"center\" responsive=\"sm\">Effort</th>\r\n          <th align=\"center\">Due Date</th>\r\n          <th align=\"center\" responsive=\"md\">Title</th>\r\n          <th align=\"center\">Details</th>\r\n          <th align=\"center\">Update</th>\r\n          <th align=\"center\">Close</th>\r\n          <th align=\"center\">Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{issueRows}</tbody>\r\n    </Table>\r\n  );\r\n}\r\n","module.exports = require(\"react-bootstrap/Table\");","module.exports = require(\"url-search-params\");"],"sourceRoot":""}