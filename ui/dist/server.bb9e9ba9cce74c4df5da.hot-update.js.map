{"version":3,"sources":["webpack:///./src/IssueReport.jsx","webpack:///./src/routes.js"],"names":["statuses","IssueReport","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","hasSelection","selectedId","query","data","graphQLFetch","constructor","props","stats","store","initialData","issueCounts","state","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","setState","render","headerColumns","map","statRows","counts","owner","IssueReportWithToast","withToasts","routes","path","component","IssueList","IssueEdit","About","NotFound"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAG,CAAC,KAAD,EAAQ,UAAR,EAAoB,OAApB,EAA6B,QAA7B,CAAjB;;AAEA,MAAMC,WAAN,SAA0BC,4CAAK,CAACC,SAAhC,CAA0C;AACxC,eAAaC,SAAb,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;AAC/C,UAAMC,MAAM,GAAG,IAAIC,wDAAJ,CAAoBH,MAApB,CAAf;AACA,UAAMI,IAAI,GAAG,EAAb;AACA,QAAIF,MAAM,CAACG,GAAP,CAAW,QAAX,CAAJ,EAA0BD,IAAI,CAACE,MAAL,GAAcJ,MAAM,CAACG,GAAP,CAAW,QAAX,CAAd;AAE1B,UAAME,SAAS,GAAGC,QAAQ,CAACN,MAAM,CAACG,GAAP,CAAW,WAAX,CAAD,EAA0B,EAA1B,CAA1B;AACA,QAAI,CAACI,MAAM,CAACC,KAAP,CAAaH,SAAb,CAAL,EAA8BH,IAAI,CAACG,SAAL,GAAiBA,SAAjB;AAC9B,UAAMI,SAAS,GAAGH,QAAQ,CAACN,MAAM,CAACG,GAAP,CAAW,WAAX,CAAD,EAA0B,EAA1B,CAA1B;AACA,QAAI,CAACI,MAAM,CAACC,KAAP,CAAaC,SAAb,CAAL,EAA8BP,IAAI,CAACO,SAAL,GAAiBA,SAAjB;AAE9B,UAAM;AAAET,YAAM,EAAE;AAAEU;AAAF;AAAV,QAAqBb,KAA3B;AACA,UAAMc,KAAK,GAAGL,QAAQ,CAACI,EAAD,EAAK,EAAL,CAAtB;;AACA,QAAI,CAACH,MAAM,CAACC,KAAP,CAAaG,KAAb,CAAL,EAA0B;AACxBT,UAAI,CAACU,YAAL,GAAoB,IAApB;AACAV,UAAI,CAACW,UAAL,GAAkBF,KAAlB;AACD;;AAED,UAAMG,KAAK,GAAI;;;;;;;;;;;;MAAf;AAcA,UAAMC,IAAI,GAAG,MAAMC,gEAAY,CAACF,KAAD,EAAQZ,IAAR,EAAcH,SAAd,CAA/B;AACA,WAAOgB,IAAP;AACD;;AAEDE,aAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,KAAK,GAAGC,iDAAK,CAACC,WAAN,GAAoBD,iDAAK,CAACC,WAAN,CAAkBC,WAAtC,GAAoD,IAAlE;AACA,WAAOF,iDAAK,CAACC,WAAb;AACA,SAAKE,KAAL,GAAa;AAAEJ;AAAF,KAAb;AACD;;AAEDK,mBAAiB,GAAG;AAClB,UAAM;AAAEL;AAAF,QAAY,KAAKI,KAAvB;AACA,QAAIJ,KAAK,IAAI,IAAb,EAAmB,KAAKM,QAAL;AACpB;;AAEDC,oBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,cAAQ,EAAE;AAAE9B,cAAM,EAAE+B;AAAV;AAAZ,QAAuCF,SAA7C;AACA,UAAM;AAAEC,cAAQ,EAAE;AAAE9B;AAAF;AAAZ,QAA2B,KAAKoB,KAAtC;;AACA,QAAIW,UAAU,KAAK/B,MAAnB,EAA2B;AACzB,WAAK2B,QAAL;AACD;AACF;;AAED,QAAMA,QAAN,GAAiB;AACf,UAAM;AAAEG,cAAQ,EAAE;AAAE9B;AAAF,OAAZ;AAAwBD,WAAxB;AAA+BE;AAA/B,QAA6C,KAAKmB,KAAxD;AACA,UAAMH,IAAI,GAAG,MAAMtB,WAAW,CAACG,SAAZ,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,SAArC,CAAnB;;AACA,QAAIgB,IAAJ,EAAU;AACR,WAAKe,QAAL,CAAc;AAAEX,aAAK,EAAEJ,IAAI,CAACO;AAAd,OAAd;AACD;AACF;;AAEDS,QAAM,GAAG;AACP,UAAMC,aAAa,GACjBxC,QAAQ,CAACyC,GAAT,CAAc7B,MAAD,iBACX;AAAI,SAAG,EAAEA;AAAT,OAAkBA,MAAlB,CADF,CADF;AAKA,UAAM;AAAEe;AAAF,QAAY,KAAKI,KAAvB;AACA,QAAIJ,KAAK,IAAI,IAAb,EAAmB,OAAO,IAAP;AACnB,UAAMe,QAAQ,GAAGf,KAAK,CAACc,GAAN,CAAWE,MAAD,iBACzB;AAAI,SAAG,EAAEA,MAAM,CAACC;AAAhB,oBACE,uEAAKD,MAAM,CAACC,KAAZ,CADF,EAEG5C,QAAQ,CAACyC,GAAT,CAAc7B,MAAD,iBACZ;AAAI,SAAG,EAAEA;AAAT,OAAkB+B,MAAM,CAAC/B,MAAD,CAAxB,CADD,CAFH,CADe,CAAjB;AAQA,wBACE,qIACE,2DAAC,2DAAD;AAAM,eAAS,EAAC;AAAhB,oBACE,2DAAC,2DAAD,CAAM,MAAN,qBAAa,gFAAb,CADF,eAEE,2DAAC,2DAAD,CAAM,IAAN,qBACE,2DAAC,wDAAD;AAAa,aAAO,EAAC;AAArB,MADF,CAFF,CADF,eAOE;AAAK,eAAS,EAAC;AAAf,MAPF,eAQE,2DAAC,4DAAD;AAAO,aAAO,MAAd;AAAe,cAAQ,MAAvB;AAAwB,WAAK,MAA7B;AAA8B,gBAAU,MAAxC;AAAyC,aAAO,EAAC;AAAjD,oBACE,uFACE,oFACE,sEADF,EAEG4B,aAFH,CADF,CADF,eAOE,0EAAQE,QAAR,CAPF,CARF,CADF;AAoBD;;AApGuC;;AAuG1C,MAAMG,oBAAoB,GAAGC,+DAAU,CAAC7C,WAAD,CAAvC;AACA4C,oBAAoB,CAACzC,SAArB,GAAiCH,WAAW,CAACG,SAA7C;AACeyC,mFAAf,E;;;;;;;;;;;;ACvHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA,MAAME,MAAM,GAAG,CACb;AAAEC,MAAI,EAAE,cAAR;AAAwBC,WAAS,EAAEC,sDAASA;AAA5C,CADa,EAEb;AAAEF,MAAI,EAAE,WAAR;AAAqBC,WAAS,EAAEE,sDAASA;AAAzC,CAFa,EAGb;AAAEH,MAAI,EAAE,SAAR;AAAmBC,WAAS,EAAEhD,wDAAWA;AAAzC,CAHa,EAIb;AAAE+C,MAAI,EAAE,QAAR;AAAkBC,WAAS,EAAEG,kDAAKA;AAAlC,CAJa,EAKb;AAAEJ,MAAI,EAAE,GAAR;AAAaC,WAAS,EAAEI,qDAAQA;AAAhC,CALa,CAAf;AAQeN,qEAAf,E","file":"server.bb9e9ba9cce74c4df5da.hot-update.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n\r\nimport React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport URLSearchParams from 'url-search-params';\r\n\r\nimport withToasts from './withToasts.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport IssueFilter from './IssueFilter.jsx';\r\n\r\nconst statuses = ['New', 'Assigned', 'Fixed', 'Closed'];\r\n\r\nclass IssueReport extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { };\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const { params: { id } } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n\r\n    const query = `query issueList(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n    ) {\r\n      issueCounts(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n      ) {\r\n        owner New Assigned Fixed Closed\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const stats = store.initialData ? store.initialData.issueCounts : null;\r\n    delete store.initialData;\r\n    this.state = { stats };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { stats } = this.state;\r\n    if (stats == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location: { search: prevSearch } } = prevProps;\r\n    const { location: { search } } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { location: { search }, match, showError } = this.props;\r\n    const data = await IssueReport.fetchData(match, search, showError);\r\n    if (data) {\r\n      this.setState({ stats: data.issueCounts });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const headerColumns = (\r\n      statuses.map((status) => (\r\n        <th key={status}>{status}</th>\r\n      ))\r\n    );\r\n    const { stats } = this.state;\r\n    if (stats == null) return null;\r\n    const statRows = stats.map((counts) => (\r\n      <tr key={counts.owner}>\r\n        <td>{counts.owner}</td>\r\n        {statuses.map((status) => (\r\n          <td key={status}>{counts[status]}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <>\r\n        <Card className=\"text-left bg-dark text-white\">\r\n          <Card.Header><h5>Filter</h5></Card.Header>\r\n          <Card.Body>\r\n            <IssueFilter urlBase=\"/report\" />\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"spacer\" />\r\n        <Table striped bordered hover responsive variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              {headerColumns}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{statRows}</tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueReportWithToast = withToasts(IssueReport);\r\nIssueReportWithToast.fetchData = IssueReport.fetchData;\r\nexport default IssueReportWithToast;\r\n","import IssueList from './IssueList.jsx';\r\nimport IssueReport from './IssueReport.jsx';\r\nimport IssueEdit from './IssueEdit.jsx';\r\nimport About from './About.jsx';\r\nimport NotFound from './NotFound.jsx';\r\n\r\nconst routes = [\r\n  { path: '/issues/:id?', component: IssueList },\r\n  { path: '/edit/:id', component: IssueEdit },\r\n  { path: '/report', component: IssueReport },\r\n  { path: '/about', component: About },\r\n  { path: '*', component: NotFound },\r\n];\r\n\r\nexport default routes;\r\n"],"sourceRoot":""}