{"version":3,"sources":["webpack:///./src/Search.jsx","webpack:///external \"react-select/lib/Async\""],"names":["selectStyles","control","provided","minWidth","margin","menu","boxShadow","Search","React","Component","constructor","props","onChangeSelection","bind","loadOptions","value","history","push","term","length","query","showError","data","graphQLFetch","search","issueList","issues","map","issue","label","id","title","render","DropDownIndicator","withRouter","withToasts"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA,MAAMA,YAAY,GAAG;AACnBC,SAAO,EAAGC,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAeC,YAAQ,EAAE,GAAzB;AAA8BC,UAAM,EAAE;AAAtC,GAAf,CADU;AAEnBC,MAAI,EAAE,OAAO;AAAEC,aAAS,EAAE;AAAb,GAAP;AAFa,CAArB;;AAKA,MAAMC,MAAN,SAAqBC,4CAAK,CAACC,SAA3B,CAAqC;AACnCC,aAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,mBAAiB,CAAC;AAAEG;AAAF,GAAD,EAAY;AAC3B,UAAM;AAAEC;AAAF,QAAc,KAAKL,KAAzB;AACAK,WAAO,CAACC,IAAR,CAAc,SAAQF,KAAM,EAA5B;AACD;;AAED,QAAMD,WAAN,CAAkBI,IAAlB,EAAwB;AACtB,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB,OAAO,EAAP;AACrB,UAAMC,KAAK,GAAI;;;;MAAf;AAKA,UAAM;AAAEC;AAAF,QAAgB,KAAKV,KAA3B;AACA,UAAMW,IAAI,GAAG,MAAMC,gEAAY,CAACH,KAAD,EAAQ;AAAEI,YAAM,EAAEN;AAAV,KAAR,EAA0BG,SAA1B,CAA/B;AACA,WAAOC,IAAI,CAACG,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA2BC,KAAD,KAAY;AAC3CC,WAAK,EAAG,IAAGD,KAAK,CAACE,EAAG,KAAIF,KAAK,CAACG,KAAM,EADO;AACJhB,WAAK,EAAEa,KAAK,CAACE;AADT,KAAZ,CAA1B,CAAP;AAGD;;AAEDE,QAAM,GAAG;AACP,wBACE,2DAAC,6DAAD;AACE,gBAAU,EAAC,eADb;AAEE,WAAK,EAAC,EAFR;AAGE,iBAAW,EAAE,KAAKlB,WAHpB;AAIE,mBAAa,EAAE,MAAM,IAJvB;AAKE,cAAQ,EAAE,KAAKF,iBALjB;AAME,gBAAU,EAAE;AAAEqB,yBAAiB,EAAE;AAArB;AANd,MADF;AAUD;;AArCkC;;AAwCtBC,kIAAU,CAAEC,+DAAU,CAAC5B,MAAD,CAAZ,CAAzB,E;;;;;;;;;;;ACpDA,mD","file":"server.549c199854739076321a.hot-update.js","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SelectAsync from 'react-select/lib/Async';\r\n\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport withToasts from './withToasts.jsx';\r\n\r\nconst selectStyles = {\r\n  control: (provided) => ({ ...provided, minWidth: 240, margin: 8 }),\r\n  menu: () => ({ boxShadow: 'inset 0 1px 0 rgba(0, 0, 0, 0.1)' }),\r\n};\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSelection = this.onChangeSelection.bind(this);\r\n    this.loadOptions = this.loadOptions.bind(this);\r\n  }\r\n\r\n  onChangeSelection({ value }) {\r\n    const { history } = this.props;\r\n    history.push(`/edit/${value}`);\r\n  }\r\n\r\n  async loadOptions(term) {\r\n    if (term.length < 3) return [];\r\n    const query = `query issueList($search: String) {\r\n        issueList(search: $search) {\r\n            issues { id title }\r\n        }\r\n    }`;\r\n    const { showError } = this.props;\r\n    const data = await graphQLFetch(query, { search: term }, showError);\r\n    return data.issueList.issues.map((issue) => ({\r\n      label: `#${issue.id}: ${issue.title}`, value: issue.id,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SelectAsync\r\n        instanceId=\"search-select\"\r\n        value=\"\"\r\n        loadOptions={this.loadOptions}\r\n        filterOptions={() => true}\r\n        onChange={this.onChangeSelection}\r\n        components={{ DropDownIndicator: null }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter((withToasts(Search)));\r\n","module.exports = require(\"react-select/lib/Async\");"],"sourceRoot":""}