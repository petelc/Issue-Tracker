{"version":3,"sources":["webpack:///./src/IssueDetail.jsx"],"names":["IssueDetail","React","Component","constructor","state","issue","toastVisible","toastMessage","toastType","showError","bind","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","match","params","id","prevId","props","query","data","graphQLFetch","parseInt","setState","message","render","description"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AACA;;AACA;;AACA;AACA;AAEA;AACA;AAEe,MAAMA,WAAN,SAA0BC,4CAAK,CAACC,SAAhC,CAA0C;AACvDC,aAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,WAAK,EAAE,EADI;AAEXC,kBAAY,EAAE,KAFH;AAGXC,kBAAY,EAAE,GAHH;AAIXC,eAAS,EAAE;AAJA,KAAb;AAOA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,mBAAiB,GAAG;AAClB,SAAKC,QAAL;AACD;;AAEDC,oBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,WAAK,EAAE;AAAEC,cAAM,EAAE;AAAEC,YAAE,EAAEC;AAAN;AAAV;AAAT,QAAwCJ,SAA9C;AACA,UAAM;AAAEC,WAAK,EAAE;AAAEC,cAAM,EAAE;AAAEC;AAAF;AAAV;AAAT,QAAgC,KAAKE,KAA3C;;AACA,QAAID,MAAM,KAAKD,EAAf,EAAmB;AACjB,WAAKL,QAAL;AACD;AACF;;AAED,QAAMA,QAAN,GAAiB;AACf,UAAM;AAAEG,WAAK,EAAE;AAAEC,cAAM,EAAE;AAAEC;AAAF;AAAV;AAAT,QAAgC,KAAKE,KAA3C;AACA,UAAMC,KAAK,GAAI;;;;QAAf;AAMA,UAAMC,IAAI,GAAG,MAAMC,yIAAY,CAACF,KAAD,EAAQ;AAAEH,QAAE,EAAEM,QAAQ,CAACN,EAAD;AAAd,KAAR,EAA8B,KAAKT,SAAnC,CAA/B;;AACA,QAAIa,IAAJ,EAAU;AACR,WAAKG,QAAL,CAAc;AAAEpB,aAAK,EAAEiB,IAAI,CAACjB;AAAd,OAAd;AACD,KAFD,MAEO;AACL,WAAKoB,QAAL,CAAc;AAAEpB,aAAK,EAAE;AAAT,OAAd;AACD;AACF;;AAEDI,WAAS,CAACiB,OAAD,EAAU;AACjB,SAAKD,QAAL,CAAc;AACZnB,kBAAY,EAAE,IADF;AAEZC,kBAAY,EAAEmB,OAFF;AAGZlB,eAAS,EAAE;AAHC,KAAd;AAKD;;AAEDG,cAAY,GAAG;AACb,SAAKc,QAAL,CAAc;AAAEnB,kBAAY,EAAE;AAAhB,KAAd;AACD;;AAEDqB,QAAM,GAAG;AACP,UAAM;AAAEtB,WAAK,EAAE;AAAEuB;AAAF;AAAT,QAA6B,KAAKxB,KAAxC;AACA,UAAM;AAAEE,kBAAF;AAAgBC,kBAAhB;AAA8BC;AAA9B,QAA4C,KAAKJ,KAAvD;AACA,wBACE;AAAK,eAAS,EAAC;AAAf,oBACE,qFADF,eAEE,wEAAMwB,WAAN,CAFF,eAGE,2DAAC,mDAAD;AACE,aAAO,EAAEtB,YADX;AAEE,eAAS,EAAE,KAAKK,YAFlB;AAGE,UAAI,EAAEH;AAHR,OAKGD,YALH,CAHF,CADF;AAaD;;AAtEsD,C","file":"server.3f30cc9aedcd7d0c1ebd.hot-update.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable radix */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nimport graphQLFetch from './graphQLFetch.';\r\nimport Toasts from './Toasts.jsx';\r\n\r\nexport default class IssueDetail extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      issue: {},\r\n      toastVisible: false,\r\n      toastMessage: ' ',\r\n      toastType: 'info',\r\n    };\r\n\r\n    this.showError = this.showError.bind(this);\r\n    this.dismissToast = this.dismissToast.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { match: { params: { id: prevId } } } = prevProps;\r\n    const { match: { params: { id } } } = this.props;\r\n    if (prevId !== id) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { match: { params: { id } } } = this.props;\r\n    const query = `query issue($id: Int!) {\r\n          issue (id: $id) {\r\n              id description\r\n          }\r\n      }`;\r\n\r\n    const data = await graphQLFetch(query, { id: parseInt(id) }, this.showError);\r\n    if (data) {\r\n      this.setState({ issue: data.issue });\r\n    } else {\r\n      this.setState({ issue: {} });\r\n    }\r\n  }\r\n\r\n  showError(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: 'danger',\r\n    });\r\n  }\r\n\r\n  dismissToast() {\r\n    this.setState({ toastVisible: false });\r\n  }\r\n\r\n  render() {\r\n    const { issue: { description } } = this.state;\r\n    const { toastVisible, toastMessage, toastType } = this.state;\r\n    return (\r\n      <div className=\"text-area\">\r\n        <h3>Description</h3>\r\n        <pre>{description}</pre>\r\n        <Toasts\r\n          showing={toastVisible}\r\n          onDismiss={this.dismissToast}\r\n          type={toastType}\r\n        >\r\n          {toastMessage}\r\n        </Toasts>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}