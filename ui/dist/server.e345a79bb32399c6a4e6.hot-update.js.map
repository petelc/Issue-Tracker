{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["IssueList","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","page","query","data","graphQLFetch","constructor","initialData","store","state","issues","selectedIssue","closeIssue","bind","deleteIssue","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","props","setState","issueList","issue","index","prevState","newList","issueUpdate","pathname","history","showSuccess","issueDelete","push","splice","render","IssueListWithToasts","withToasts"],"mappings":"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","file":"server.e345a79bb32399c6a4e6.hot-update.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable react/prop-types */\r\n/* eslint \"react/jsx-no-undef\": \"off\" */\r\nimport React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport Card from 'react-bootstrap/Card';\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport IssueDetail from './IssueDetail.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport withToasts from './withToasts.jsx';\r\n\r\nclass IssueList extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { hasSelection: false, selectedId: 0 };\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const { params: { id } } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n\r\n    let page = parseInt(params.get('page'), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n    vars.page = page;\r\n\r\n    const query = `query issueList(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n      $hasSelection: Boolean!\r\n      $selectedId: Int!\r\n      $page: Int!\r\n    ) {\r\n      issueList(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n        page: $page\r\n      ) {\r\n        issues {\r\n          id title status owner\r\n          created effort due\r\n        }\r\n        pages\r\n      }\r\n      issue(id: $selectedId) @include (if : $hasSelection) {\r\n        id description\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    // const issues = store.initialData ? store.initialData.issueList.issues : null;\r\n    // const selectedIssue = store.initialData ? store.initialData.issue : null;\r\n    const initialData = store.initialData || \r\n    delete store.initialData;\r\n    this.state = {\r\n      issues,\r\n      selectedIssue,\r\n    };\r\n    this.closeIssue = this.closeIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { issues } = this.state;\r\n    if (issues == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { search: prevSearch },\r\n      match: { params: { id: prevId } },\r\n    } = prevProps;\r\n    const { location: { search }, match: { params: { id } } } = this.props;\r\n    if (prevSearch !== search || prevId !== id) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { location: { search }, match, showError } = this.props;\r\n    const data = await IssueList.fetchData(match, search, showError);\r\n    if (data) {\r\n      this.setState({ issues: data.issueList.issues, selectedIssue: data.issue });\r\n    }\r\n  }\r\n\r\n  async closeIssue(index) {\r\n    const query = `mutation issueClose($id: Int!) {\r\n        issueUpdate(id: $id, changes: { status: Closed }) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n    const { issues } = this.state;\r\n    const { showError } = this.props;\r\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\r\n    if (data) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        newList[index] = data.issueUpdate;\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async deleteIssue(index) {\r\n    const query = `mutation issueDelete($id: Int!) {\r\n      issueDelete(id: $id)\r\n    }`;\r\n    const { issues } = this.state;\r\n    const { location: { pathname, search }, history } = this.props;\r\n    const { showSuccess, showError } = this.props;\r\n    const { id } = issues[index];\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data && data.issueDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        if (pathname === `/issues/${id}`) {\r\n          history.push({ pathname: '/issues', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { issues: newList };\r\n      });\r\n      showSuccess(`Deleted issue ${id} successfully.`);\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { issues } = this.state;\r\n    if (issues == null) return null;\r\n    const { selectedIssue } = this.state;\r\n    return (\r\n      <>\r\n        <Card className=\"text-left bg-dark text-white\">\r\n          <Card.Header><h5>Filter</h5></Card.Header>\r\n          <Card.Body>\r\n            <IssueFilter urlBase=\"/issues\" />\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"spacer\" />\r\n        <IssueTable\r\n          issues={issues}\r\n          closeIssue={this.closeIssue}\r\n          deleteIssue={this.deleteIssue}\r\n        />\r\n        <div className=\"spacer\" />\r\n        <IssueDetail issue={selectedIssue} />\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueListWithToasts = withToasts(IssueList);\r\nIssueListWithToasts.fetchData = IssueList.fetchData;\r\nexport default withToasts(IssueList);\r\n"],"sourceRoot":""}