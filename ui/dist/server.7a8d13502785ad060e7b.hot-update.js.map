{"version":3,"sources":["webpack:///./src/IssueDetail.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueTable.jsx","webpack:///external \"react-bootstrap/Pagination\""],"names":["IssueDetail","issue","description","SECTION_SIZE","PageLink","params","page","activePage","children","set","React","cloneElement","disabled","search","toString","IssueList","Component","fetchData","match","showError","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","query","data","graphQLFetch","constructor","initialData","store","issueList","issues","pages","selectedIssue","state","closeIssue","bind","deleteIssue","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","props","setState","index","prevState","newList","issueUpdate","pathname","history","showSuccess","issueDelete","push","splice","undoMessage","restoreIssue","gra","render","startPage","Math","floor","endPage","prevSection","nextSection","items","i","min","IssueListWithToasts","withToasts","IssueRow","withRouter","selectLocation","closeTooltip","deleteTooltip","owner","created","toDateString","effort","due","title","IssueTable","issueRows","map"],"mappings":"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","file":"server.7a8d13502785ad060e7b.hot-update.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function IssueDetail({ issue }) {\r\n  if (issue) {\r\n    return (\r\n      <div className=\"text-area\">\r\n        <h3>Description</h3>\r\n        <pre>{issue.description}</pre>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n","/* eslint-disable react/no-unused-state */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable react/prop-types */\r\n/* eslint \"react/jsx-no-undef\": \"off\" */\r\nimport React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport IssueDetail from './IssueDetail.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport withToasts from './withToasts.jsx';\r\n\r\nconst SECTION_SIZE = 5;\r\n\r\nfunction PageLink({\r\n  params, page, activePage, children,\r\n}) {\r\n  params.set('page', page);\r\n  if (page === 0) return React.cloneElement(children, { disabled: true });\r\n  return (\r\n    <LinkContainer\r\n      isActive={() => page === activePage}\r\n      to={{ search: `?${params.toString()}` }}\r\n    >\r\n      {children}\r\n    </LinkContainer>\r\n  );\r\n}\r\n\r\nclass IssueList extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { hasSelection: false, selectedId: 0 };\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const { params: { id } } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n\r\n    let page = parseInt(params.get('page'), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n    vars.page = page;\r\n\r\n    const query = `query issueList(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n      $hasSelection: Boolean!\r\n      $selectedId: Int!\r\n      $page: Int!\r\n    ) {\r\n      issueList(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n        page: $page\r\n      ) {\r\n        issues {\r\n          id title status owner\r\n          created effort due\r\n        }\r\n        pages\r\n      }\r\n      issue(id: $selectedId) @include (if : $hasSelection) {\r\n        id description\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    // const issues = store.initialData ? store.initialData.issueList.issues : null;\r\n    // const selectedIssue = store.initialData ? store.initialData.issue : null;\r\n    const initialData = store.initialData || { issueList: {} };\r\n    const {\r\n      issueList: { issues, pages }, issue: selectedIssue,\r\n    } = initialData;\r\n    delete store.initialData;\r\n    this.state = {\r\n      issues,\r\n      selectedIssue,\r\n      pages,\r\n    };\r\n    this.closeIssue = this.closeIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { issues } = this.state;\r\n    if (issues == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { search: prevSearch },\r\n      match: { params: { id: prevId } },\r\n    } = prevProps;\r\n    const { location: { search }, match: { params: { id } } } = this.props;\r\n    if (prevSearch !== search || prevId !== id) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { location: { search }, match, showError } = this.props;\r\n    const data = await IssueList.fetchData(match, search, showError);\r\n    if (data) {\r\n      this.setState({\r\n        issues: data.issueList.issues,\r\n        selectedIssue: data.issue,\r\n        pages: data.issueList.pages,\r\n      });\r\n    }\r\n  }\r\n\r\n  async closeIssue(index) {\r\n    const query = `mutation issueClose($id: Int!) {\r\n        issueUpdate(id: $id, changes: { status: Closed }) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n    const { issues } = this.state;\r\n    const { showError } = this.props;\r\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\r\n    if (data) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        newList[index] = data.issueUpdate;\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async deleteIssue(index) {\r\n    const query = `mutation issueDelete($id: Int!) {\r\n      issueDelete(id: $id)\r\n    }`;\r\n    const { issues } = this.state;\r\n    const { location: { pathname, search }, history } = this.props;\r\n    const { showSuccess, showError } = this.props;\r\n    const { id } = issues[index];\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data && data.issueDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        if (pathname === `/issues/${id}`) {\r\n          history.push({ pathname: '/issues', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { issues: newList };\r\n      });\r\n      const undoMessage = (\r\n        <span>\r\n          {`Deleted issue ${id} successfully.`}\r\n          <Button variant=\"danger\" onClick={() => this.restoreIssue(id)}>\r\n            UNDO\r\n          </Button>\r\n        </span>\r\n      );\r\n      showSuccess(undoMessage);\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async restoreIssue(id) {\r\n    const query = `mutation issueRestore($id: Int!) {\r\n      issueRestore(id: $id)\r\n    }`;\r\n    const { showSuccess, showError } = this.props;\r\n    const data = await gra\r\n  }\r\n\r\n  render() {\r\n    const { issues } = this.state;\r\n    if (issues == null) return null;\r\n    const { selectedIssue, pages } = this.state;\r\n    const { location: { search } } = this.props;\r\n\r\n    const params = new URLSearchParams(search);\r\n    let page = parseInt(params.get('page'), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n\r\n    const startPage = Math.floor((page - 1) / SECTION_SIZE) * SECTION_SIZE + 1;\r\n    const endPage = startPage + SECTION_SIZE - 1;\r\n    const prevSection = startPage === 1 ? 0 : startPage - SECTION_SIZE;\r\n    const nextSection = endPage >= pages ? 0 : startPage + SECTION_SIZE;\r\n\r\n    const items = [];\r\n    for (let i = startPage; i <= Math.min(endPage, pages); i += 1) {\r\n      params.set('page', 1);\r\n      items.push((\r\n        <PageLink key={i} params={params} activePage={page} page={i}>\r\n          <Pagination.Item>{i}</Pagination.Item>\r\n        </PageLink>\r\n      ));\r\n    }\r\n    return (\r\n      <>\r\n        <Card className=\"text-left bg-dark text-white\">\r\n          <Card.Header><h5>Filter</h5></Card.Header>\r\n          <Card.Body>\r\n            <IssueFilter urlBase=\"/issues\" />\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"spacer\" />\r\n        <IssueTable\r\n          issues={issues}\r\n          closeIssue={this.closeIssue}\r\n          deleteIssue={this.deleteIssue}\r\n        />\r\n        <div className=\"spacer\" />\r\n        <IssueDetail issue={selectedIssue} />\r\n        <Pagination>\r\n          <PageLink params={params} page={prevSection}>\r\n            <Pagination.Item>{'<'}</Pagination.Item>\r\n          </PageLink>\r\n          {items}\r\n          <PageLink params={params} page={nextSection}>\r\n            <Pagination.Item>{'>'}</Pagination.Item>\r\n          </PageLink>\r\n        </Pagination>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueListWithToasts = withToasts(IssueList);\r\nIssueListWithToasts.fetchData = IssueList.fetchData;\r\nexport default withToasts(IssueList);\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// Bootstrap\r\nimport { Tooltip, OverlayTrigger, Button } from 'react-bootstrap';\r\nimport Table from 'react-bootstrap/Table';\r\nimport {\r\n  BsFillXCircleFill, BsFillTrashFill, BsPencil, BsCheckAll,\r\n} from 'react-icons/bs';\r\n\r\nconst IssueRow = withRouter(({\r\n  issue,\r\n  location: { search },\r\n  closeIssue,\r\n  deleteIssue,\r\n  index,\r\n}) => {\r\n  const selectLocation = { pathname: `/issues/${issue.id}`, search };\r\n  const closeTooltip = (\r\n    <Tooltip id=\"close-tooltip\" placement=\"top\">Close Issue</Tooltip>\r\n  );\r\n  const deleteTooltip = (\r\n    <Tooltip id=\"delete-tooltip\" placement=\"top\">Delete Issue</Tooltip>\r\n  );\r\n  return (\r\n    <tr>\r\n      <td component=\"th\">{issue.id}</td>\r\n      <td align=\"center\">{issue.status}</td>\r\n      <td align=\"center\">{issue.owner}</td>\r\n      <td align=\"center\">{issue.created.toDateString()}</td>\r\n      <td align=\"center\">{issue.effort}</td>\r\n      <td align=\"center\">{issue.due.toDateString() ? issue.due.toDateString() : ' '}</td>\r\n      <td align=\"center\">{issue.title}</td>\r\n      <td align=\"center\">\r\n        <Link to={selectLocation}>\r\n          <Button size=\"sm\">\r\n            <BsCheckAll />\r\n          </Button>\r\n        </Link>\r\n      </td>\r\n      <td align=\"center\">\r\n        <Link to={`/edit/${issue.id}`}>\r\n          <Button size=\"sm\">\r\n            <BsPencil />\r\n          </Button>\r\n        </Link>\r\n      </td>\r\n      <td align=\"center\">\r\n        <OverlayTrigger delayShow={1000} overlay={closeTooltip}>\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={() => { closeIssue(index); }}\r\n          >\r\n            <BsFillXCircleFill />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n      <td align=\"center\">\r\n        <OverlayTrigger delayShow={1000} overlay={deleteTooltip}>\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={() => { deleteIssue(index); }}\r\n          >\r\n            <BsFillTrashFill />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n    </tr>\r\n  );\r\n});\r\n\r\nexport default function IssueTable({ issues, closeIssue, deleteIssue }) {\r\n  const issueRows = issues.map((issue, index) => (\r\n    <IssueRow\r\n      key={issue.id}\r\n      issue={issue}\r\n      closeIssue={closeIssue}\r\n      deleteIssue={deleteIssue}\r\n      index={index}\r\n    />\r\n  ));\r\n  return (\r\n    <Table striped bordered hover responsive variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n          <th responsive=\"sm\">ID</th>\r\n          <th align=\"center\" responsive=\"md\">Status</th>\r\n          <th align=\"center\" responsive=\"md\">Owner</th>\r\n          <th align=\"center\">Created</th>\r\n          <th align=\"center\" responsive=\"sm\">Effort</th>\r\n          <th align=\"center\">Due Date</th>\r\n          <th align=\"center\" responsive=\"md\">Title</th>\r\n          <th align=\"center\">Details</th>\r\n          <th align=\"center\">Update</th>\r\n          <th align=\"center\">Close</th>\r\n          <th align=\"center\">Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{issueRows}</tbody>\r\n    </Table>\r\n  );\r\n}\r\n","module.exports = require(\"react-bootstrap/Pagination\");"],"sourceRoot":""}