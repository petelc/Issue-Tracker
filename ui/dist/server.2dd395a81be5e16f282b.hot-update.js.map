{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["IssueList","React","Component","fetchData","match","search","showError","params","URLSearchParams","constructor","state","issues","toastVisible","toastMessage","toastType","closeIssue","bind","deleteIssue","showSuccess","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","props","vars","get","status","effortMin","parseInt","Number","isNaN","effortMax","query","data","graphQLFetch","setState","issueList","index","id","prevState","newList","issueUpdate","pathname","history","issueDelete","push","splice","message","render","path","IssueDetail"],"mappings":"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","file":"server.2dd395a81be5e16f282b.hot-update.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable react/prop-types */\r\n/* eslint \"react/jsx-no-undef\": \"off\" */\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport URLSearchParams from 'url-search-params';\r\nimport Card from 'react-bootstrap/Card';\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport IssueDetail from './IssueDetail.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport Toasts from './Toasts.jsx';\r\nimport store from './store.js';\r\n\r\nexport default class IssueList extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search)\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      issues: [],\r\n      toastVisible: false,\r\n      toastMessage: ' ',\r\n      toastType: 'info',\r\n    };\r\n    this.closeIssue = this.closeIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n    this.showSuccess = this.showSuccess.bind(this);\r\n    this.showError = this.showError.bind(this);\r\n    this.dismissToast = this.dismissToast.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { search: prevSearch },\r\n    } = prevProps;\r\n    const {\r\n      location: { search },\r\n    } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  // Handle the querystring param here for Issue Filter\r\n  async loadData() {\r\n    const {\r\n      location: { search },\r\n    } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    const vars = {};\r\n    if (params.get('status')) vars.status = params.get('status');\r\n\r\n    // Adding in effortMin and effortMax parameters\r\n    const effortMin = parseInt(params.get('effortMin'), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get('effortMax'), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n    const query = `query issueList(\r\n        $status: StatusType\r\n        $effortMin: Int\r\n        $effortMax: Int\r\n        ) {\r\n        issueList (\r\n          status: $status\r\n          effortMin: $effortMin\r\n          effortMax: $effortMax\r\n          ) {\r\n          id title status owner\r\n          created effort due\r\n        }\r\n      }`;\r\n\r\n    const data = await graphQLFetch(query, vars, this.showError);\r\n    if (data) {\r\n      this.setState({ issues: data.issueList });\r\n    }\r\n  }\r\n\r\n  async closeIssue(index) {\r\n    const query = `mutation issueClose($id: Int!) {\r\n        issueUpdate(id: $id, changes: { status: Closed }) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n    const { issues } = this.state;\r\n    const data = await graphQLFetch(query, { id: issues[index].id }, this.showError);\r\n    if (data) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        newList[index] = data.issueUpdate;\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async deleteIssue(index) {\r\n    const query = `mutation issueDelete($id: Int!) {\r\n      issueDelete(id: $id)\r\n    }`;\r\n    const { issues } = this.state;\r\n    const {\r\n      location: { pathname, search },\r\n      history,\r\n    } = this.props;\r\n    const { id } = issues[index];\r\n    const data = await graphQLFetch(query, { id }, this.showError);\r\n    if (data && data.issueDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        if (pathname === `/issues/${id}`) {\r\n          history.push({ pathname: '/issues', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: 'success',\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: 'danger',\r\n    });\r\n  }\r\n\r\n  dismissToast() {\r\n    this.setState({ toastVisible: false });\r\n  }\r\n\r\n  render() {\r\n    const { issues } = this.state;\r\n    // eslint-disable-next-line react/prop-types\r\n    const { match } = this.props;\r\n    const { toastVisible, toastMessage, toastType } = this.state;\r\n    return (\r\n      <>\r\n        <Card className=\"text-left bg-dark text-white\">\r\n          <Card.Header><h5>Filter</h5></Card.Header>\r\n          <Card.Body>\r\n            <IssueFilter />\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"spacer\" />\r\n        <IssueTable\r\n          issues={issues}\r\n          closeIssue={this.closeIssue}\r\n          deleteIssue={this.deleteIssue}\r\n        />\r\n        <div className=\"spacer\" />\r\n        <Route path={`${match.path}/:id`} component={IssueDetail} />\r\n        <Toasts\r\n          showing={toastVisible}\r\n          onDismiss={this.dismissToast}\r\n          type={toastType}\r\n        >\r\n          {toastMessage}\r\n        </Toasts>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}