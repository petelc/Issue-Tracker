{"version":3,"sources":["webpack:///./src/IssueEdit.jsx"],"names":["format","num","toString","unformat","str","val","parseInt","Number","isNaN","IssueEdit","React","Component","fetchData","match","showError","query","constructor","props","state","issue","invalidFields","value","showingValidation","toastVisible","toastMessage","toastType","onChange","bind","handleSubmit","onValidityChange","showValidation","showSuccess","dismissToast","onBlur","onEffortChange","componentDidMount","loadData","componentDidUpdate","prevProps","params","id","prevId","event","naturalValue","name","textValue","target","undefined","setState","prevState","e","valid","preventDefault","Object","keys","length","created","changes","data","graphQLFetch","issueUpdate","dismissValidation","message","render","propsId","title","status","owner","effort","description","due","validationMessage","toDateString"],"mappings":"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","file":"server.44b09e654def5d1213a8.hot-update.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// Bootstrap\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert';\r\n// Local Imports\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport Toasts from './Toasts.jsx';\r\nimport store from './store.js';\r\n\r\nfunction format(num) {\r\n  return num != null ? num.toString() : '';\r\n}\r\n\r\nfunction unformat(str) {\r\n  const val = parseInt(str, 10);\r\n  return Number.isNaN(val) ? null : val;\r\n}\r\n\r\nexport default class IssueEdit extends React.Component {\r\n  static async fetchData(match, showError) {\r\n    const query = `query iss($id: Int!) {\r\n      issue(id: )\r\n    }`\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      issue: {},\r\n      invalidFields: {},\r\n      value: format(props.value),\r\n      showingValidation: false,\r\n      toastVisible: false,\r\n      toastMessage: ' ',\r\n      toastType: 'success',\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onValidityChange = this.onValidityChange.bind(this);\r\n    this.showValidation = this.showValidation.bind(this);\r\n    this.showSuccess = this.showSuccess.bind(this);\r\n    this.showError = this.showError.bind(this);\r\n    this.dismissToast = this.dismissToast.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n    this.onEffortChange = this.onEffortChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: {\r\n        params: { id: prevId },\r\n      },\r\n    } = prevProps;\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props;\r\n    if (id !== prevId) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  onChange(event, naturalValue) {\r\n    const { name, value: textValue } = event.target;\r\n    let value;\r\n    if (name === 'effort') {\r\n      value = unformat(textValue);\r\n    } else {\r\n      value = naturalValue === undefined ? textValue : naturalValue;\r\n    }\r\n    this.setState((prevState) => ({\r\n      issue: { ...prevState.issue, [name]: value },\r\n    }));\r\n  }\r\n\r\n  onBlur(e) {\r\n    const { onChange } = this.props;\r\n    const { value } = this.state;\r\n    onChange(e, unformat(value));\r\n  }\r\n\r\n  onEffortChange(e) {\r\n    if (e.target.value.match(/^\\d*$/)) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n  }\r\n\r\n  onValidityChange(event, valid) {\r\n    const { name } = event.target;\r\n    this.setState((prevState) => {\r\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\r\n      if (valid) delete invalidFields[name];\r\n      return { invalidFields };\r\n    });\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.showValidation();\r\n    const { issue, invalidFields } = this.state;\r\n    if (Object.keys(invalidFields).length !== 0) return;\r\n\r\n    const query = `mutation issueUpdate(\r\n        $id: Int!\r\n        $changes: IssueUpdateInputs!\r\n      ) {\r\n        issueUpdate(\r\n          id: $id\r\n          changes: $changes\r\n        ) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n\r\n    const { id, created, ...changes } = issue;\r\n    const data = await graphQLFetch(query, { changes, id }, this.showError);\r\n    if (data) {\r\n      this.setState({ issue: data.issueUpdate });\r\n      this.showSuccess('Updated Issue Successfully');\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const query = `query issue($id: Int!) {\r\n        issue(id: $id) {\r\n          id title status owner\r\n          effort created due description\r\n        }\r\n      }`;\r\n\r\n    let {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props;\r\n    id = parseInt(id, 10);\r\n    const data = await graphQLFetch(query, { id }, this.showError);\r\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\r\n  }\r\n\r\n  showValidation() {\r\n    this.setState({ showingValidation: true });\r\n  }\r\n\r\n  dismissValidation() {\r\n    this.setState({ showingValidation: false });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: 'success',\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: 'danger',\r\n    });\r\n  }\r\n\r\n  dismissToast() {\r\n    this.setState({ toastVisible: false });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      issue: { id },\r\n    } = this.state;\r\n    const {\r\n      match: {\r\n        params: { id: propsId },\r\n      },\r\n    } = this.props;\r\n      // propsId = parseInt(propsId, 10);\r\n    if (id == null) {\r\n      if (propsId != null) {\r\n        return <h3>{`Issue with ID ${propsId} not found`}</h3>;\r\n      }\r\n      return null;\r\n    }\r\n    const {\r\n      issue: { title, status },\r\n    } = this.state;\r\n    const {\r\n      issue: { owner, effort, description },\r\n    } = this.state;\r\n    const {\r\n      issue: { created, due },\r\n    } = this.state;\r\n    const { invalidFields, showingValidation } = this.state;\r\n    let validationMessage;\r\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\r\n      validationMessage = (\r\n        <Alert variant=\"danger\" dismissible>\r\n          <Alert.Heading>Danger Will Robinson!</Alert.Heading>\r\n          <p>\r\n            Please correct invalid fields before submitting.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={this.dismissValidation} variant=\"outline-danger\">\r\n              BAM!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n      );\r\n    }\r\n    const { toastVisible, toastMessage, toastType } = this.state;\r\n    return (\r\n      <Card>\r\n        <Card.Header><h3>{`Editing issue: ${id}`}</h3></Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>Created</Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    name=\"created\"\r\n                    value={created.toDateString()}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Status\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    onChange={this.onChange}\r\n                    custom\r\n                  >\r\n                    <option value=\"New\">New</option>\r\n                    <option value=\"Assigned\">Assigned</option>\r\n                    <option value=\"Fixed\">Fixed</option>\r\n                    <option value=\"Closed\">Closed</option>\r\n                  </Form.Control>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Owner\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    name=\"owner\"\r\n                    value={owner}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Effort\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <Form.Control\r\n                    name=\"effort\"\r\n                    value={effort}\r\n                    onChange={this.onChange}\r\n                    onBlur={this.onBlur}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group validationstate={\r\n              invalidFields.due ? 'error' : null\r\n            }\r\n              >\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Due\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Form.Control\r\n                    name=\"due\"\r\n                    value={due}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                  <FormControl.Feedback type=\"invalid\">\r\n                    Please provide a Due Date\r\n                  </FormControl.Feedback>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Title\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm=\"auto\">\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    cols={125}\r\n                    rows={1}\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3}>\r\n                  <Form.Label>\r\n                    Description\r\n                  </Form.Label>\r\n                </Col>\r\n                <Col sm=\"auto\">\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={12}\r\n                    cols={125}\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={this.onChange}\r\n                    key={id}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm=\"auto\" />\r\n                <Col className=\"mr-auto\" sm=\"auto\">\r\n                  <ButtonToolbar>\r\n                    <ButtonGroup className=\"mr-2\">\r\n                      <LinkContainer to=\"/issues\">\r\n                        <Button variant=\"secondary\">\r\n                          Back\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      {'   '}\r\n                      <Button variant=\"success\" type=\"submit\">\r\n                        Submit\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </ButtonToolbar>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group>\r\n                <Col sm={3} />\r\n                <Col sm=\"auto\">\r\n                  {validationMessage}\r\n                </Col>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Link to={`/edit/${id - 1}`}>Prev</Link>\r\n          {' | '}\r\n          <Link to={`/edit/${id + 1}`}>Next</Link>\r\n        </Card.Footer>\r\n        <Toasts\r\n          showing={toastVisible}\r\n          onDismiss={this.dismissToast}\r\n          type={toastType}\r\n        >\r\n          {toastMessage}\r\n        </Toasts>\r\n      </Card>\r\n\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}